/**
 *  This file is part of spreadit-backend. Copyright (C) 2020 eggze Technik GmbH
 *
 * spreadit-backend is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * spreadit-backend is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.eggze.spreadit.common.packet.server.scans;

import com.eggze.spreadit.common.packet.server.ServerPacketIF;
import java.util.ArrayDeque;

/**
 * An interface describing the server packet where the ScanManager returns
 * dates of scans that have contacts. In the event the client has no scan dates
 * with contacts set yet, an empty SendDatesPacket is sent. On any other error,
 * a ServerErrorPacket is returned instead.
 * 
 * When a SendDatesPacket is returned to the client, it is guaranteed the
 * ScanManager has set a sent timestamp to each related scan, indicating the
 * scan was sent, or attempted to be sent to the client. This allows the client,
 * upon reception, to update its own entries.
 * 
 * The timestamp serves to mark the scans as received from the client in a
 * subsequent communication of a DatesReceived packet - it is communicated back
 * from the client and used in the database selection of the scans to be marked
 * as received.
 * 
 * Failure to receive this packet from the client will trigger a subsequent
 * RequestDatesPacket, which will update the timestamp entry and integrate these
 * scans into a new packet chain.
 * 
 * This is the second step in the following packet chain
 * 
 * Client                                        Server
 * ----------------------------------------------------
 * ReqDatesPacket          ->
 *                         <-           SendDatesPacket
 * DatesReceivedPacket     ->
 *                         <-     DatesReceivedOKPacket
 * 
 * 
 * @author K. Dermitzakis <kde at eggze.com>
 * @version 0.1
 * @since 0.1
 */
public interface SendDatesPacketIF extends ServerPacketIF{

    /**
     * Get the timestamp of when scan dates with contacts were requested. The
     * timestamp is generated by the ScanManager upon request of scan dates with
     * contacts, if any.
     * 
     * @return the timestamp of when scan dates with contacts were requested
     */
    abstract long getRequestedTimestamp();
    
    /**
     * Set the timestamp of when scan dates with contacts were requested. The
     * timestamp is generated by the ScanManager upon request of scan dates with
     * contacts, if any.
     * 
     * @param lastSentTimestamp the timestamp of when scan dates with contacts
     * were requested
     * 
     */
    abstract void setRequestedTimestamp(long lastSentTimestamp);
    
    /**
     * Whether this SendDatesPacket contains any scan dates with contacts.
     * 
     * @return true if this SendDatesPacket contains scan dates with contacts,
     * false otherwise
     */
    abstract boolean hasDates();
    
    /**
     * Add a scan dates with contacts to this SendResultsPacket.
     * 
     * @param date the scan dates with contacts to add
     * @return true if the scan date with contacts was added, false otherwise.
     * The number of scan dates with contacts to be added is limited to 254
     * per SendDatesPacket
     * 
     */
    abstract boolean addDate(long date);
    
    /**
     * Get the ArrayDeque containing the scan dates with contacts.
     *
     * @return the ArrayDeque containing the scan dates with contacts
     */
    abstract public ArrayDeque<Long> getDates();
    
    /**
     * Clear the ArrayDeque of any scan dates with contacts in this
     * SendDatesPacket. After calling this method, no scan dates with contacts
     * will be contained within this SendDatesPacket.
     */
    abstract public void clearDates();

}
